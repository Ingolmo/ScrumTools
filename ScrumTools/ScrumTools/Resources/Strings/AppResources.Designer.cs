//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ScrumTools.Resources.Strings {
    using System;
    using System.Reflection;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class AppResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal AppResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ScrumTools.Resources.Strings.AppResources", typeof(AppResources).GetTypeInfo().Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Agile Principles.
        /// </summary>
        internal static string AgilePrinciples {
            get {
                return ResourceManager.GetString("AgilePrinciples", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Principles behind the Agile Manifesto, commonly referred to as the 12 Agile Principles, are a set of guiding concepts that support project teams in implementing agile projects. Use these principles as a litmus test to determine whether or not you’re being agile in your project work and thinking:
        ///
        ///1. Our highest priority is to satisfy the customer through early and continuous delivery of valuable software.
        ///2. Welcome changing requirements, even late in development. Agile processes harness change for t [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string AgilePrinciplesContent {
            get {
                return ResourceManager.GetString("AgilePrinciplesContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Basics of the Agile Methodologies.
        /// </summary>
        internal static string AgilePrinciplesDescription {
            get {
                return ResourceManager.GetString("AgilePrinciplesDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Comming Soon.
        /// </summary>
        internal static string CommingSoon {
            get {
                return ResourceManager.GetString("CommingSoon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This section is under construction. It will be available very soon!!.
        /// </summary>
        internal static string CommingSoonContent {
            get {
                return ResourceManager.GetString("CommingSoonContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to We&apos;re still working on this....
        /// </summary>
        internal static string CommingSoonDescription {
            get {
                return ResourceManager.GetString("CommingSoonDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scrum.
        /// </summary>
        internal static string Scrum {
            get {
                return ResourceManager.GetString("Scrum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scrum Artifacts.
        /// </summary>
        internal static string ScrumArtifacts {
            get {
                return ResourceManager.GetString("ScrumArtifacts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Product Backlog: The Product backlog is a living artifact that may be subjected to change, when there is a change in the external business environment, market conditions, regulatory changes or technology changes.
        ///
        ///Sprint Backlog: The Sprint backlog formation is usually guided by the Sprint Goal. It is a forecast by the development team on what functionality the team will have to work and deliver.
        ///
        ///Burn Down Chart: At any point in time in a Sprint, the total work remaining in the Sprint Backlog can be su [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ScrumArtifactsContent {
            get {
                return ResourceManager.GetString("ScrumArtifactsContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Main Scrum Elements.
        /// </summary>
        internal static string ScrumArtifactsDescription {
            get {
                return ResourceManager.GetString("ScrumArtifactsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scrum (n): A framework within which people can address complex adaptive problems, while
        ///productively and creatively delivering products of the highest possible value..
        /// </summary>
        internal static string ScrumContent {
            get {
                return ResourceManager.GetString("ScrumContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Definition of Scrum framework.
        /// </summary>
        internal static string ScrumDescription {
            get {
                return ResourceManager.GetString("ScrumDescription", resourceCulture);
            }
        }
    }
}
